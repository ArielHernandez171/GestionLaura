@using GestionLaura.Logica
@using GestionLaura.Clases
@using System.IO
@using System.Runtime.InteropServices
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.Maui.Storage

@page "/searchcli"
<div class="container">
    <h1>Buscar cliente</h1>
    <div class="card">

        <EditForm OnSubmit="@buscar" Model="@legajo">
            <div class="row">
                <label>Id del cliente</label>
                <InputText @bind-Value="legajo.Id"/>
            </div>
            <div class="row">
                <button type="submit" class="btn btn-primary">Buscar</button>
            </div>
        </EditForm>
    </div>
    @if (a != false)
    {  
        <EditForm OnSubmit="Actualizar" Model="legajo">
            <div class="row">
                <label>Id del cliente</label>
                <InputText @bind-Value="legajo.Id"/>
            </div>
            <div class="row">
                <label>Nombre del cliente</label>
                <InputText @bind-Value="legajo.Name"/>
            </div>
            <div class="row">
                <label>Apellido del cliente</label>
                <InputText @bind-Value="legajo.SurName"/>
            </div>
            <div class="row">
                <label>Historial del cliente</label>
                <InputTextArea @bind-Value="legajo.Historial" accept="image/.jpg,image/.png, image/.jpeg"/>
            </div>
            <input type="file" OnChange="AgregarFoto" MaxAllowedSize="1572864" />
            <div class="row">
                <button @onclick="Actualizar">Actualizar</button>
            </div>
            <Fotos byt="@legajo.Images" id="@legajo.Id"></Fotos>

        </EditForm>

    }
</div>

@code {
    public List<RegistroPersonal> Personals = new List<RegistroPersonal>();
    protected Legajo legajo = new Legajo();
    private LogLegajo logica = new LogLegajo();
    private LogServ LogServ=new LogServ();
    bool a = false;
    byte[]? Imag;
    List<ImageSource> imgList= new List<ImageSource>();

    protected async Task Actualizar()
    {
        if(legajo!=null)
            await logica.ActualizarLegajos(legajo);
    }
    protected async Task AgregarFoto(ChangeEventArgs e){
        try
        {
            var file = (IEnumerable<IBrowserFile>)e.Value;
            var fil = file.FirstOrDefault();
            if (fil!=null && legajo != null)
            {
                var FileName = fil.Name;
                Imag = new byte[fil.Size];
                await fil.OpenReadStream().ReadAsync(Imag);
                legajo.Images.Add(Imag);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
        }
    }

    protected async Task buscar()
    {
        await logica.Cargar();
        if(legajo.Id!=""&&logica.Legajos.Where(d=>d.Id==legajo.Id).Any()){
            legajo = await logica.BuscarLegajo(legajo.Id);
            if(logica.BuscarLegajo(legajo.Id)!=null){
                a = true;
            }
            else{


                await Application.Current.MainPage.DisplayAlert("Alerta","No se encontro el cliente buscado","OK");
            }
        }
    }
}
