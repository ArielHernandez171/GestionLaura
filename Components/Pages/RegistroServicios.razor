@page "/regsrv"
@using Microsoft.AspNetCore.Components.Forms
@using GestionLaura.Clases
@using GestionLaura.Logica
@using System.ComponentModel.DataAnnotations

<h3>Registro Servicios</h3>
<div class="container">
    <div class="card">

        <EditForm Model="@models" OnSubmit="@buscar" >

            <div class="card">
                <div class="card">
                    <label>Ingrese la fecha de inicio</label>
                    <InputDate  inputmode="numeric" id="dateBeg" @bind-Value="models.dateBeg" />
                </div>
                <div class="card">
                    <label>Ingrese la fecha final</label>
                    <InputDate  inputmode="numeric" id="deteEnd" @bind-Value="models.dateEnd" />
                </div>
                <div class="row">
                    <button class="btn btn-group-lg" type="submit">Buscar por fecha</button>
                </div>
            </div>

        </EditForm>
        <EditForm OnSubmit="BuscarId" Model="id">
            <div class="container-fluid">
                <div>
                    <label>Buscar por Id</label>
                    <InputText @bind-Value="id"/>
                </div>
                <div>
                    <button type="submit" onsubmit="@BuscarId">Buscar por nombre</button>
                </div>
            </div>
        </EditForm>
        @if(servicios!=null){
            <table>
                <tr style="border:1px solid">
                    <td>Fecha</td>
                    <td>Concepto</td>
                    <td>Costo</td>
                    <td>Precio</td>
                    <td>Id del cliente</td>
                    <!--<td>Servicio</td>-->
                </tr>
                @foreach (RegistroServs t in servicios)
                {
                    <tr style="border:1px solid">
                        <td>@t.Fecha</td>
                        <td>@t.Concepto</td>
                        <td>@t.Costo</td>
                        <td>@t.PrecioFinal</td>
                        <td>@t.ClienteId</td>
                        <td>
                            @Historial(t.registroPersonals,t.Fecha)
                        </td>
                    </tr>
                }

            </table>
            <div class="container">
                <h1>El costo total del periodo fue de: @total en @clientes clientes con un retorno de @i</h1>
            </div>
            <div>
                <button @onclick="descargar" class="btn btn-primary">Descargar</button>
            </div>
        }
        @if(clientes==0&&servicios!=null){
            <h3>No se encontraron servicios</h3>
        }
    </div>
</div>

@code {
    public float total=0;
    public int clientes = 0;
    float i = 0;
    public string id = "";
    public string s = "";
    public Model models=new Model();
    public List<RegistroServs>? servicios=null;
    private LogServ logica = new LogServ();
    public async Task BuscarId()
    {
        i = 0;
        clientes = 0;
        total = 0;
        if (id != "")
        {

            servicios = await logica.ObtenerServiName(id);
            if (servicios != null)
            {
                foreach (RegistroServs r in servicios)
                {
                    total = total + r.Costo;
                    clientes++;
                    i += r.PrecioFinal;
                }

            }
        }
    }
    private async Task buscar()
    {
        i = 0;
        clientes = 0;
        total = 0;
        if (models.dateBeg <= models.dateEnd)
            servicios = await logica.ObtenerServiDate(models.dateBeg, models.dateEnd);
        else
            await Application.Current.MainPage.DisplayAlert("Error","Ingreso una fecha de inicio posterior a la de fin","OK");
        if(servicios!=null){
            foreach(RegistroServs r in servicios)
            {
                total = total + r.Costo;
                clientes++;
                i+=r.PrecioFinal;
            }

        }
    }
    protected override void OnInitialized()
    {
        base.OnInitialized();
    }
    public async void descargar()
    {
        if (servicios != null)
            logica.Descargardo(servicios);
        else
            await Application.Current.MainPage.DisplayAlert("Alerta", "Usted esta tratando de descargar un excel en blanco", "OK");
    }
    public string Historial(List<RegistroPersonal> l, DateTime f)
    {
        string c = "";
        foreach (var a in l)
        {
            if(a.Fecha.Equals(f))
                c = c + " " + a.Servicios;
        }
        return c;
    } 
    public class Model
    {
        [Required(ErrorMessage="Fecha obligatoria")]
        public DateTime dateBeg=DateTime.Today;
        [Required(ErrorMessage = "Fecha obligatoria")]
        public DateTime dateEnd=DateTime.Today.AddDays(1);
    }
}
